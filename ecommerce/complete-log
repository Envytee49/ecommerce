2024-08-02T16:51:21.911+07:00  INFO 17096 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : Starting EcommerceApplicationTests using Java 21.0.3 with PID 17096 (started by Admin in E:\Code\Java\VNPT_INTERN\ecommerce)
2024-08-02T16:51:21.915+07:00  INFO 17096 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : No active profile set, falling back to 1 default profile: "default"
2024-08-02T16:51:24.037+07:00  INFO 17096 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:51:24.039+07:00  INFO 17096 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T16:51:24.390+07:00  INFO 17096 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 340 ms. Found 17 JPA repository interfaces.
2024-08-02T16:51:24.430+07:00  INFO 17096 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:51:24.432+07:00  INFO 17096 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T16:51:24.464+07:00  INFO 17096 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.cart.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:51:24.464+07:00  INFO 17096 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.CancelledOrderReasonRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:51:24.465+07:00  INFO 17096 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.CancelledOrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:51:24.465+07:00  INFO 17096 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:51:24.465+07:00  INFO 17096 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:51:24.465+07:00  INFO 17096 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.AttributeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:51:24.465+07:00  INFO 17096 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:51:24.467+07:00  INFO 17096 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:51:24.467+07:00  INFO 17096 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.ShopAddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:51:24.468+07:00  INFO 17096 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.ShopRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:51:24.468+07:00  INFO 17096 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.UserAddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:51:24.468+07:00  INFO 17096 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:51:24.470+07:00  INFO 17096 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.ProductVoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:51:24.470+07:00  INFO 17096 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.UserRoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:51:24.470+07:00  INFO 17096 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherConstraintRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:51:24.471+07:00  INFO 17096 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherRedemptionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:51:24.471+07:00  INFO 17096 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:51:24.471+07:00  INFO 17096 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
2024-08-02T16:51:25.602+07:00  INFO 17096 --- [ecommerce] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T16:51:26.422+07:00  INFO 17096 --- [ecommerce] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2cee5365
2024-08-02T16:51:26.427+07:00  INFO 17096 --- [ecommerce] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T16:51:26.525+07:00  INFO 17096 --- [ecommerce] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T16:51:26.701+07:00  INFO 17096 --- [ecommerce] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T16:51:26.812+07:00  INFO 17096 --- [ecommerce] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T16:51:27.358+07:00  INFO 17096 --- [ecommerce] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T16:51:27.472+07:00  WARN 17096 --- [ecommerce] [main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-02T16:51:28.241+07:00  WARN 17096 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.abstractVoucher.model.ProductVoucherId
2024-08-02T16:51:28.241+07:00  WARN 17096 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.abstractVoucher.model.ProductVoucherId
2024-08-02T16:51:28.242+07:00  WARN 17096 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.abstractVoucher.model.VoucherRedemptionId
2024-08-02T16:51:28.242+07:00  WARN 17096 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.abstractVoucher.model.VoucherRedemptionId
2024-08-02T16:51:28.243+07:00  WARN 17096 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.user.model.UserRoleId
2024-08-02T16:51:28.243+07:00  WARN 17096 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.user.model.UserRoleId
2024-08-02T16:51:29.510+07:00  INFO 17096 --- [ecommerce] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T16:51:29.514+07:00  INFO 17096 --- [ecommerce] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:51:30.452+07:00  INFO 17096 --- [ecommerce] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T16:51:31.701+07:00  WARN 17096 --- [ecommerce] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T16:51:32.374+07:00  INFO 17096 --- [ecommerce] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@114b81af, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4ef435f3, org.springframework.security.web.context.SecurityContextHolderFilter@19dffe76, org.springframework.security.web.header.HeaderWriterFilter@4184bced, org.springframework.web.filter.CorsFilter@f25106c, org.springframework.security.web.authentication.logout.LogoutFilter@c3acda3, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@5b33446d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@9a1b870, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3a95898c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@216bd6cd, org.springframework.security.web.session.SessionManagementFilter@32317a37, org.springframework.security.web.access.ExceptionTranslationFilter@6b7a96e1, org.springframework.security.web.access.intercept.AuthorizationFilter@56d9bc5f]
2024-08-02T16:51:33.824+07:00  INFO 17096 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : Started EcommerceApplicationTests in 12.351 seconds (process running for 14.155)
2024-08-02T16:51:34.769+07:00  WARN 17096 --- [ecommerce] [main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02
2024-08-02T16:51:34.770+07:00 ERROR 17096 --- [ecommerce] [main] o.h.engine.jdbc.spi.SqlExceptionHelper   : Table 'nest_ecom.cancelled_order_reason' doesn't exist
2024-08-02T16:51:34.771+07:00  INFO 17096 --- [ecommerce] [main] o.h.e.internal.DefaultLoadEventListener  : HHH000327: Error performing load command

org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select cor1_0.uuid_reason,cor1_0.reason from cancelled_order_reason cor1_0 where cor1_0.uuid_reason=?] [Table 'nest_ecom.cancelled_order_reason' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:264) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:265) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:145) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:67) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:189) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:211) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:145) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:75) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:3726) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3715) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:604) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromCacheOrDatasource(DefaultLoadEventListener.java:590) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:560) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:207) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadWithRegularProxy(DefaultLoadEventListener.java:290) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:242) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:111) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:68) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1225) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1213) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:209) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:160) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:149) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:112) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:149) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.get(SessionImpl.java:1026) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.lambda$entityIsDetached$0(DefaultMergeEventListener.java:408) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.spi.LoadQueryInfluencers.fromInternalFetchProfile(LoadQueryInfluencers.java:106) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:406) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319) ~[spring-orm-6.1.8.jar:6.1.8]
	at jdk.proxy2/jdk.proxy2.$Proxy148.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:631) ~[spring-data-jpa-3.3.0.jar:3.3.0]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll(SimpleJpaRepository.java:654) ~[spring-data-jpa-3.3.0.jar:3.3.0]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll(SimpleJpaRepository.java:1) ~[spring-data-jpa-3.3.0.jar:3.3.0]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354) ~[spring-aop-6.1.8.jar:6.1.8]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.3.0.jar:3.3.0]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.3.0.jar:3.3.0]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.3.0.jar:3.3.0]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516) ~[spring-data-commons-3.3.0.jar:3.3.0]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285) ~[spring-data-commons-3.3.0.jar:3.3.0]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628) ~[spring-data-commons-3.3.0.jar:3.3.0]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.8.jar:6.1.8]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168) ~[spring-data-commons-3.3.0.jar:3.3.0]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.3.0.jar:3.3.0]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.8.jar:6.1.8]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.3.0.jar:3.3.0]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.8.jar:6.1.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.8.jar:6.1.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392) ~[spring-tx-6.1.8.jar:6.1.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.8.jar:6.1.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.8.jar:6.1.8]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.1.8.jar:6.1.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.8.jar:6.1.8]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.3.0.jar:3.3.0]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.8.jar:6.1.8]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.8.jar:6.1.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.8.jar:6.1.8]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.1.8.jar:6.1.8]
	at jdk.proxy2/jdk.proxy2.$Proxy183.saveAll(Unknown Source) ~[na:na]
	at org.example.ecommerce.EcommerceApplicationTests.addReason(EcommerceApplicationTests.java:423) ~[test-classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728) ~[junit-platform-commons-1.10.2.jar:1.10.2]
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.10.2.jar:5.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63) ~[junit-platform-launcher-1.10.2.jar:1.10.2]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) ~[junit5-rt.jar:na]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) ~[junit-rt.jar:na]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) ~[idea_rt.jar:na]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) ~[junit-rt.jar:na]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232) ~[junit-rt.jar:na]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55) ~[junit-rt.jar:na]
Caused by: java.sql.SQLSyntaxErrorException: Table 'nest_ecom.cancelled_order_reason' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-5.1.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-5.1.0.jar:na]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 147 common frames omitted

2024-08-02T16:51:34.868+07:00  INFO 17096 --- [ecommerce] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:51:34.872+07:00  INFO 17096 --- [ecommerce] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T16:51:34.888+07:00  INFO 17096 --- [ecommerce] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T16:52:11.465+07:00  INFO 12760 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : Starting EcommerceApplicationTests using Java 21.0.3 with PID 12760 (started by Admin in E:\Code\Java\VNPT_INTERN\ecommerce)
2024-08-02T16:52:11.468+07:00  INFO 12760 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : No active profile set, falling back to 1 default profile: "default"
2024-08-02T16:52:12.886+07:00  INFO 12760 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:52:12.887+07:00  INFO 12760 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T16:52:13.123+07:00  INFO 12760 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 224 ms. Found 17 JPA repository interfaces.
2024-08-02T16:52:13.156+07:00  INFO 12760 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:52:13.157+07:00  INFO 12760 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T16:52:13.192+07:00  INFO 12760 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.cart.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:52:13.193+07:00  INFO 12760 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.CancelledOrderReasonRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:52:13.193+07:00  INFO 12760 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.CancelledOrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:52:13.193+07:00  INFO 12760 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:52:13.194+07:00  INFO 12760 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:52:13.194+07:00  INFO 12760 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.AttributeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:52:13.194+07:00  INFO 12760 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:52:13.194+07:00  INFO 12760 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:52:13.196+07:00  INFO 12760 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.ShopAddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:52:13.196+07:00  INFO 12760 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.ShopRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:52:13.197+07:00  INFO 12760 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.UserAddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:52:13.197+07:00  INFO 12760 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:52:13.198+07:00  INFO 12760 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.ProductVoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:52:13.199+07:00  INFO 12760 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.UserRoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:52:13.199+07:00  INFO 12760 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherConstraintRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:52:13.200+07:00  INFO 12760 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherRedemptionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:52:13.200+07:00  INFO 12760 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:52:13.200+07:00  INFO 12760 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29 ms. Found 0 Redis repository interfaces.
2024-08-02T16:52:14.267+07:00  INFO 12760 --- [ecommerce] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T16:52:14.856+07:00  INFO 12760 --- [ecommerce] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1a7163e3
2024-08-02T16:52:14.859+07:00  INFO 12760 --- [ecommerce] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T16:52:14.943+07:00  INFO 12760 --- [ecommerce] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T16:52:15.052+07:00  INFO 12760 --- [ecommerce] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T16:52:15.129+07:00  INFO 12760 --- [ecommerce] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T16:52:15.839+07:00  INFO 12760 --- [ecommerce] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T16:52:15.930+07:00  WARN 12760 --- [ecommerce] [main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-02T16:52:16.663+07:00  WARN 12760 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.abstractVoucher.model.ProductVoucherId
2024-08-02T16:52:16.663+07:00  WARN 12760 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.abstractVoucher.model.ProductVoucherId
2024-08-02T16:52:16.664+07:00  WARN 12760 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.abstractVoucher.model.VoucherRedemptionId
2024-08-02T16:52:16.664+07:00  WARN 12760 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.abstractVoucher.model.VoucherRedemptionId
2024-08-02T16:52:16.665+07:00  WARN 12760 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.user.model.UserRoleId
2024-08-02T16:52:16.666+07:00  WARN 12760 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.user.model.UserRoleId
2024-08-02T16:52:17.801+07:00  INFO 12760 --- [ecommerce] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T16:52:17.805+07:00  INFO 12760 --- [ecommerce] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:52:18.854+07:00  INFO 12760 --- [ecommerce] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T16:52:20.099+07:00  WARN 12760 --- [ecommerce] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T16:52:20.684+07:00  INFO 12760 --- [ecommerce] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3d48674, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@24555012, org.springframework.security.web.context.SecurityContextHolderFilter@3d6f549c, org.springframework.security.web.header.HeaderWriterFilter@702f99a5, org.springframework.web.filter.CorsFilter@5b7737eb, org.springframework.security.web.authentication.logout.LogoutFilter@31854086, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@216bd6cd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3638ae1c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@46eb5c0c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3415ecfe, org.springframework.security.web.session.SessionManagementFilter@9a1b870, org.springframework.security.web.access.ExceptionTranslationFilter@19a920d1, org.springframework.security.web.access.intercept.AuthorizationFilter@22d522d4]
2024-08-02T16:52:21.902+07:00  INFO 12760 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : Started EcommerceApplicationTests in 10.897 seconds (process running for 12.683)
2024-08-02T16:52:23.095+07:00  INFO 12760 --- [ecommerce] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:52:23.099+07:00  INFO 12760 --- [ecommerce] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T16:52:23.122+07:00  INFO 12760 --- [ecommerce] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T16:57:54.317+07:00  INFO 6592 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : Starting EcommerceApplicationTests using Java 21.0.3 with PID 6592 (started by Admin in E:\Code\Java\VNPT_INTERN\ecommerce)
2024-08-02T16:57:54.319+07:00  INFO 6592 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : No active profile set, falling back to 1 default profile: "default"
2024-08-02T16:57:55.782+07:00  INFO 6592 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:57:55.784+07:00  INFO 6592 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T16:57:56.039+07:00  INFO 6592 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 241 ms. Found 17 JPA repository interfaces.
2024-08-02T16:57:56.071+07:00  INFO 6592 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:57:56.073+07:00  INFO 6592 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T16:57:56.094+07:00  INFO 6592 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.cart.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:57:56.095+07:00  INFO 6592 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.CancelledOrderReasonRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:57:56.095+07:00  INFO 6592 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.CancelledOrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:57:56.096+07:00  INFO 6592 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:57:56.096+07:00  INFO 6592 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:57:56.097+07:00  INFO 6592 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.AttributeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:57:56.097+07:00  INFO 6592 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:57:56.097+07:00  INFO 6592 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:57:56.098+07:00  INFO 6592 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.ShopAddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:57:56.098+07:00  INFO 6592 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.ShopRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:57:56.098+07:00  INFO 6592 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.UserAddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:57:56.098+07:00  INFO 6592 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:57:56.099+07:00  INFO 6592 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.ProductVoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:57:56.100+07:00  INFO 6592 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.UserRoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:57:56.100+07:00  INFO 6592 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherConstraintRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:57:56.102+07:00  INFO 6592 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherRedemptionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:57:56.102+07:00  INFO 6592 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:57:56.102+07:00  INFO 6592 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2024-08-02T16:57:57.275+07:00  INFO 6592 --- [ecommerce] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T16:57:58.126+07:00  INFO 6592 --- [ecommerce] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2b9aeedb
2024-08-02T16:57:58.131+07:00  INFO 6592 --- [ecommerce] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T16:57:58.236+07:00  INFO 6592 --- [ecommerce] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T16:57:58.479+07:00  INFO 6592 --- [ecommerce] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T16:57:58.563+07:00  INFO 6592 --- [ecommerce] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T16:57:59.043+07:00  INFO 6592 --- [ecommerce] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T16:57:59.140+07:00  WARN 6592 --- [ecommerce] [main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-02T16:57:59.836+07:00  WARN 6592 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.abstractVoucher.model.ProductVoucherId
2024-08-02T16:57:59.836+07:00  WARN 6592 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.abstractVoucher.model.ProductVoucherId
2024-08-02T16:57:59.837+07:00  WARN 6592 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.abstractVoucher.model.VoucherRedemptionId
2024-08-02T16:57:59.837+07:00  WARN 6592 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.abstractVoucher.model.VoucherRedemptionId
2024-08-02T16:57:59.838+07:00  WARN 6592 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.user.model.UserRoleId
2024-08-02T16:57:59.838+07:00  WARN 6592 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.user.model.UserRoleId
2024-08-02T16:58:01.007+07:00  INFO 6592 --- [ecommerce] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T16:58:01.012+07:00  INFO 6592 --- [ecommerce] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:58:01.892+07:00  INFO 6592 --- [ecommerce] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T16:58:03.053+07:00  WARN 6592 --- [ecommerce] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T16:58:03.768+07:00  INFO 6592 --- [ecommerce] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3108d1e1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@59711ea7, org.springframework.security.web.context.SecurityContextHolderFilter@31854086, org.springframework.security.web.header.HeaderWriterFilter@106361e9, org.springframework.web.filter.CorsFilter@6bd8d8a7, org.springframework.security.web.authentication.logout.LogoutFilter@62ccf42c, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@72a80668, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@39081953, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6409a2e4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@75862489, org.springframework.security.web.session.SessionManagementFilter@6175782c, org.springframework.security.web.access.ExceptionTranslationFilter@1daf79ab, org.springframework.security.web.access.intercept.AuthorizationFilter@6cee6eb7]
2024-08-02T16:58:05.276+07:00  INFO 6592 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : Started EcommerceApplicationTests in 11.378 seconds (process running for 12.933)
2024-08-02T16:58:06.202+07:00  WARN 6592 --- [ecommerce] [main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1364, SQLState: HY000
2024-08-02T16:58:06.203+07:00 ERROR 6592 --- [ecommerce] [main] o.h.engine.jdbc.spi.SqlExceptionHelper   : Field 'uuid_reason' doesn't have a default value
2024-08-02T16:58:06.278+07:00  INFO 6592 --- [ecommerce] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:58:06.280+07:00  INFO 6592 --- [ecommerce] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T16:58:06.296+07:00  INFO 6592 --- [ecommerce] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T17:02:51.039+07:00  INFO 24548 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : Starting EcommerceApplicationTests using Java 21.0.3 with PID 24548 (started by Admin in E:\Code\Java\VNPT_INTERN\ecommerce)
2024-08-02T17:02:51.041+07:00  INFO 24548 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : No active profile set, falling back to 1 default profile: "default"
2024-08-02T17:02:52.383+07:00  INFO 24548 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:02:52.385+07:00  INFO 24548 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T17:02:52.637+07:00  INFO 24548 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 241 ms. Found 17 JPA repository interfaces.
2024-08-02T17:02:52.674+07:00  INFO 24548 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:02:52.679+07:00  INFO 24548 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T17:02:52.704+07:00  INFO 24548 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.cart.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:02:52.704+07:00  INFO 24548 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.CancelledOrderReasonRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:02:52.705+07:00  INFO 24548 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.CancelledOrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:02:52.705+07:00  INFO 24548 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:02:52.707+07:00  INFO 24548 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:02:52.707+07:00  INFO 24548 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.AttributeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:02:52.708+07:00  INFO 24548 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:02:52.708+07:00  INFO 24548 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:02:52.709+07:00  INFO 24548 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.ShopAddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:02:52.710+07:00  INFO 24548 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.ShopRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:02:52.710+07:00  INFO 24548 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.UserAddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:02:52.711+07:00  INFO 24548 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:02:52.712+07:00  INFO 24548 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.ProductVoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:02:52.713+07:00  INFO 24548 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.UserRoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:02:52.714+07:00  INFO 24548 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherConstraintRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:02:52.715+07:00  INFO 24548 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherRedemptionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:02:52.715+07:00  INFO 24548 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:02:52.715+07:00  INFO 24548 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2024-08-02T17:02:53.905+07:00  INFO 24548 --- [ecommerce] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T17:02:54.500+07:00  INFO 24548 --- [ecommerce] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5d829ef0
2024-08-02T17:02:54.504+07:00  INFO 24548 --- [ecommerce] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T17:02:54.576+07:00  INFO 24548 --- [ecommerce] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T17:02:55.157+07:00  INFO 24548 --- [ecommerce] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T17:02:55.265+07:00  INFO 24548 --- [ecommerce] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T17:02:55.839+07:00  INFO 24548 --- [ecommerce] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T17:02:55.934+07:00  WARN 24548 --- [ecommerce] [main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-02T17:02:56.546+07:00  WARN 24548 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.abstractVoucher.model.ProductVoucherId
2024-08-02T17:02:56.546+07:00  WARN 24548 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.abstractVoucher.model.ProductVoucherId
2024-08-02T17:02:56.546+07:00  WARN 24548 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.abstractVoucher.model.VoucherRedemptionId
2024-08-02T17:02:56.546+07:00  WARN 24548 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.abstractVoucher.model.VoucherRedemptionId
2024-08-02T17:02:56.547+07:00  WARN 24548 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.user.model.UserRoleId
2024-08-02T17:02:56.548+07:00  WARN 24548 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.user.model.UserRoleId
2024-08-02T17:02:57.656+07:00  INFO 24548 --- [ecommerce] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T17:02:57.660+07:00  INFO 24548 --- [ecommerce] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:02:58.400+07:00  INFO 24548 --- [ecommerce] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T17:02:59.396+07:00  WARN 24548 --- [ecommerce] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T17:02:59.947+07:00  INFO 24548 --- [ecommerce] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4d5bfb1a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17fe4f0f, org.springframework.security.web.context.SecurityContextHolderFilter@5b33446d, org.springframework.security.web.header.HeaderWriterFilter@4dc34411, org.springframework.web.filter.CorsFilter@65c6a7a, org.springframework.security.web.authentication.logout.LogoutFilter@1925be93, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@a93641e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@114b81af, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3415ecfe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@38d583cd, org.springframework.security.web.session.SessionManagementFilter@18e69455, org.springframework.security.web.access.ExceptionTranslationFilter@c3acda3, org.springframework.security.web.access.intercept.AuthorizationFilter@6bd8d8a7]
2024-08-02T17:03:01.036+07:00  INFO 24548 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : Started EcommerceApplicationTests in 10.41 seconds (process running for 11.949)
2024-08-02T17:03:01.864+07:00  WARN 24548 --- [ecommerce] [main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1364, SQLState: HY000
2024-08-02T17:03:01.864+07:00 ERROR 24548 --- [ecommerce] [main] o.h.engine.jdbc.spi.SqlExceptionHelper   : Field 'uuid_reason' doesn't have a default value
2024-08-02T17:03:01.950+07:00  INFO 24548 --- [ecommerce] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:03:01.954+07:00  INFO 24548 --- [ecommerce] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T17:03:01.967+07:00  INFO 24548 --- [ecommerce] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T17:04:46.336+07:00  INFO 3208 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : Starting EcommerceApplicationTests using Java 21.0.3 with PID 3208 (started by Admin in E:\Code\Java\VNPT_INTERN\ecommerce)
2024-08-02T17:04:46.339+07:00  INFO 3208 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : No active profile set, falling back to 1 default profile: "default"
2024-08-02T17:04:48.029+07:00  INFO 3208 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:04:48.031+07:00  INFO 3208 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T17:04:48.349+07:00  INFO 3208 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 305 ms. Found 17 JPA repository interfaces.
2024-08-02T17:04:48.383+07:00  INFO 3208 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:04:48.385+07:00  INFO 3208 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T17:04:48.440+07:00  INFO 3208 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.cart.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:04:48.442+07:00  INFO 3208 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.CancelledOrderReasonRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:04:48.444+07:00  INFO 3208 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.CancelledOrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:04:48.447+07:00  INFO 3208 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:04:48.451+07:00  INFO 3208 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:04:48.452+07:00  INFO 3208 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.AttributeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:04:48.452+07:00  INFO 3208 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:04:48.454+07:00  INFO 3208 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:04:48.459+07:00  INFO 3208 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.ShopAddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:04:48.460+07:00  INFO 3208 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.ShopRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:04:48.463+07:00  INFO 3208 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.UserAddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:04:48.464+07:00  INFO 3208 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:04:48.472+07:00  INFO 3208 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.ProductVoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:04:48.475+07:00  INFO 3208 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.UserRoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:04:48.478+07:00  INFO 3208 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherConstraintRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:04:48.479+07:00  INFO 3208 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherRedemptionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:04:48.480+07:00  INFO 3208 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:04:48.480+07:00  INFO 3208 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 81 ms. Found 0 Redis repository interfaces.
2024-08-02T17:04:49.880+07:00  INFO 3208 --- [ecommerce] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T17:04:50.564+07:00  INFO 3208 --- [ecommerce] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@439d545c
2024-08-02T17:04:50.573+07:00  INFO 3208 --- [ecommerce] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T17:04:50.644+07:00  INFO 3208 --- [ecommerce] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T17:04:50.766+07:00  INFO 3208 --- [ecommerce] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T17:04:50.862+07:00  INFO 3208 --- [ecommerce] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T17:04:51.495+07:00  INFO 3208 --- [ecommerce] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T17:04:51.627+07:00  WARN 3208 --- [ecommerce] [main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-02T17:04:52.329+07:00  WARN 3208 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.abstractVoucher.model.ProductVoucherId
2024-08-02T17:04:52.329+07:00  WARN 3208 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.abstractVoucher.model.ProductVoucherId
2024-08-02T17:04:52.330+07:00  WARN 3208 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.abstractVoucher.model.VoucherRedemptionId
2024-08-02T17:04:52.331+07:00  WARN 3208 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.abstractVoucher.model.VoucherRedemptionId
2024-08-02T17:04:52.332+07:00  WARN 3208 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.user.model.UserRoleId
2024-08-02T17:04:52.332+07:00  WARN 3208 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.user.model.UserRoleId
2024-08-02T17:04:53.576+07:00  INFO 3208 --- [ecommerce] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T17:04:53.579+07:00  INFO 3208 --- [ecommerce] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:04:54.579+07:00  INFO 3208 --- [ecommerce] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T17:04:55.916+07:00  WARN 3208 --- [ecommerce] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T17:04:56.728+07:00  INFO 3208 --- [ecommerce] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7d82eeb9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@49afa057, org.springframework.security.web.context.SecurityContextHolderFilter@68c7162b, org.springframework.security.web.header.HeaderWriterFilter@3d48674, org.springframework.web.filter.CorsFilter@78b5b2f9, org.springframework.security.web.authentication.logout.LogoutFilter@1fe8a2fc, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@626a783b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@593fcbe7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@314e2b4b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3680cde9, org.springframework.security.web.session.SessionManagementFilter@65227bd6, org.springframework.security.web.access.ExceptionTranslationFilter@5111de33, org.springframework.security.web.access.intercept.AuthorizationFilter@2a4d34b2]
2024-08-02T17:04:58.412+07:00  INFO 3208 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : Started EcommerceApplicationTests in 12.575 seconds (process running for 14.24)
2024-08-02T17:04:59.572+07:00  WARN 3208 --- [ecommerce] [main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1364, SQLState: HY000
2024-08-02T17:04:59.572+07:00 ERROR 3208 --- [ecommerce] [main] o.h.engine.jdbc.spi.SqlExceptionHelper   : Field 'uuid_reason' doesn't have a default value
2024-08-02T17:04:59.682+07:00  INFO 3208 --- [ecommerce] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:04:59.684+07:00  INFO 3208 --- [ecommerce] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T17:04:59.706+07:00  INFO 3208 --- [ecommerce] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T17:05:41.585+07:00  INFO 17516 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : Starting EcommerceApplicationTests using Java 21.0.3 with PID 17516 (started by Admin in E:\Code\Java\VNPT_INTERN\ecommerce)
2024-08-02T17:05:41.587+07:00  INFO 17516 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : No active profile set, falling back to 1 default profile: "default"
2024-08-02T17:05:43.023+07:00  INFO 17516 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:05:43.025+07:00  INFO 17516 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T17:05:43.285+07:00  INFO 17516 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 250 ms. Found 17 JPA repository interfaces.
2024-08-02T17:05:43.319+07:00  INFO 17516 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:05:43.323+07:00  INFO 17516 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T17:05:43.352+07:00  INFO 17516 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.cart.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:05:43.353+07:00  INFO 17516 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.CancelledOrderReasonRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:05:43.353+07:00  INFO 17516 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.CancelledOrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:05:43.354+07:00  INFO 17516 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:05:43.354+07:00  INFO 17516 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:05:43.354+07:00  INFO 17516 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.AttributeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:05:43.354+07:00  INFO 17516 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:05:43.354+07:00  INFO 17516 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:05:43.354+07:00  INFO 17516 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.ShopAddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:05:43.356+07:00  INFO 17516 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.ShopRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:05:43.359+07:00  INFO 17516 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.UserAddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:05:43.359+07:00  INFO 17516 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:05:43.361+07:00  INFO 17516 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.ProductVoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:05:43.361+07:00  INFO 17516 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.UserRoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:05:43.361+07:00  INFO 17516 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherConstraintRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:05:43.362+07:00  INFO 17516 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherRedemptionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:05:43.362+07:00  INFO 17516 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:05:43.362+07:00  INFO 17516 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.
2024-08-02T17:05:44.390+07:00  INFO 17516 --- [ecommerce] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T17:05:45.034+07:00  INFO 17516 --- [ecommerce] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5d829ef0
2024-08-02T17:05:45.039+07:00  INFO 17516 --- [ecommerce] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T17:05:45.133+07:00  INFO 17516 --- [ecommerce] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T17:05:45.281+07:00  INFO 17516 --- [ecommerce] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T17:05:45.360+07:00  INFO 17516 --- [ecommerce] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T17:05:45.943+07:00  INFO 17516 --- [ecommerce] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T17:05:46.051+07:00  WARN 17516 --- [ecommerce] [main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-02T17:05:46.691+07:00  WARN 17516 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.abstractVoucher.model.ProductVoucherId
2024-08-02T17:05:46.691+07:00  WARN 17516 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.abstractVoucher.model.ProductVoucherId
2024-08-02T17:05:46.692+07:00  WARN 17516 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.abstractVoucher.model.VoucherRedemptionId
2024-08-02T17:05:46.692+07:00  WARN 17516 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.abstractVoucher.model.VoucherRedemptionId
2024-08-02T17:05:46.693+07:00  WARN 17516 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.user.model.UserRoleId
2024-08-02T17:05:46.693+07:00  WARN 17516 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.user.model.UserRoleId
2024-08-02T17:05:47.793+07:00  INFO 17516 --- [ecommerce] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T17:05:47.798+07:00  INFO 17516 --- [ecommerce] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:05:48.587+07:00  INFO 17516 --- [ecommerce] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T17:05:49.611+07:00  WARN 17516 --- [ecommerce] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T17:05:50.203+07:00  INFO 17516 --- [ecommerce] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@64cde9a5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5efb3259, org.springframework.security.web.context.SecurityContextHolderFilter@16344151, org.springframework.security.web.header.HeaderWriterFilter@32317a37, org.springframework.web.filter.CorsFilter@327dcf8c, org.springframework.security.web.authentication.logout.LogoutFilter@5cdd90c4, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@1d0e2c96, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7b3c411f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@b8da646, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@69c7b870, org.springframework.security.web.session.SessionManagementFilter@4ba61340, org.springframework.security.web.access.ExceptionTranslationFilter@3c05fb12, org.springframework.security.web.access.intercept.AuthorizationFilter@4e850e68]
2024-08-02T17:05:51.385+07:00  INFO 17516 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : Started EcommerceApplicationTests in 10.241 seconds (process running for 11.819)
2024-08-02T17:05:52.170+07:00  INFO 17516 --- [ecommerce] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:05:52.172+07:00  INFO 17516 --- [ecommerce] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T17:05:52.187+07:00  INFO 17516 --- [ecommerce] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T17:06:38.204+07:00  INFO 20892 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : Starting EcommerceApplicationTests using Java 21.0.3 with PID 20892 (started by Admin in E:\Code\Java\VNPT_INTERN\ecommerce)
2024-08-02T17:06:38.208+07:00  INFO 20892 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : No active profile set, falling back to 1 default profile: "default"
2024-08-02T17:06:39.727+07:00  INFO 20892 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:06:39.728+07:00  INFO 20892 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T17:06:40.052+07:00  INFO 20892 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 314 ms. Found 17 JPA repository interfaces.
2024-08-02T17:06:40.086+07:00  INFO 20892 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:06:40.090+07:00  INFO 20892 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T17:06:40.120+07:00  INFO 20892 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.cart.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:06:40.123+07:00  INFO 20892 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.CancelledOrderReasonRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:06:40.123+07:00  INFO 20892 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.CancelledOrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:06:40.123+07:00  INFO 20892 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:06:40.124+07:00  INFO 20892 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:06:40.124+07:00  INFO 20892 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.AttributeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:06:40.124+07:00  INFO 20892 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:06:40.124+07:00  INFO 20892 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.product.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:06:40.125+07:00  INFO 20892 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.ShopAddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:06:40.125+07:00  INFO 20892 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.ShopRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:06:40.125+07:00  INFO 20892 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.UserAddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:06:40.126+07:00  INFO 20892 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.user.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:06:40.127+07:00  INFO 20892 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.ProductVoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:06:40.128+07:00  INFO 20892 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.UserRoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:06:40.128+07:00  INFO 20892 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherConstraintRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:06:40.128+07:00  INFO 20892 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherRedemptionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:06:40.130+07:00  INFO 20892 --- [ecommerce] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.example.ecommerce.abstractVoucher.repository.VoucherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:06:40.131+07:00  INFO 20892 --- [ecommerce] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 28 ms. Found 0 Redis repository interfaces.
2024-08-02T17:06:41.306+07:00  INFO 20892 --- [ecommerce] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T17:06:41.919+07:00  INFO 20892 --- [ecommerce] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@23ea8830
2024-08-02T17:06:41.923+07:00  INFO 20892 --- [ecommerce] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T17:06:42.004+07:00  INFO 20892 --- [ecommerce] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T17:06:42.123+07:00  INFO 20892 --- [ecommerce] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T17:06:42.216+07:00  INFO 20892 --- [ecommerce] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T17:06:42.818+07:00  INFO 20892 --- [ecommerce] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T17:06:42.915+07:00  WARN 20892 --- [ecommerce] [main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-02T17:06:43.551+07:00  WARN 20892 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.abstractVoucher.model.ProductVoucherId
2024-08-02T17:06:43.551+07:00  WARN 20892 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.abstractVoucher.model.ProductVoucherId
2024-08-02T17:06:43.552+07:00  WARN 20892 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.abstractVoucher.model.VoucherRedemptionId
2024-08-02T17:06:43.552+07:00  WARN 20892 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.abstractVoucher.model.VoucherRedemptionId
2024-08-02T17:06:43.554+07:00  WARN 20892 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): org.example.ecommerce.user.model.UserRoleId
2024-08-02T17:06:43.554+07:00  WARN 20892 --- [ecommerce] [main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): org.example.ecommerce.user.model.UserRoleId
2024-08-02T17:06:44.611+07:00  INFO 20892 --- [ecommerce] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T17:06:44.618+07:00  INFO 20892 --- [ecommerce] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:06:45.333+07:00  INFO 20892 --- [ecommerce] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T17:06:46.348+07:00  WARN 20892 --- [ecommerce] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T17:06:46.976+07:00  INFO 20892 --- [ecommerce] [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5efb3259, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@327dcf8c, org.springframework.security.web.context.SecurityContextHolderFilter@6df37cc4, org.springframework.security.web.header.HeaderWriterFilter@1727d525, org.springframework.web.filter.CorsFilter@69c7b870, org.springframework.security.web.authentication.logout.LogoutFilter@47fde444, org.springframework.security.oauth2.server.resource.web.authentication.BearerTokenAuthenticationFilter@7fa498b3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46eb5c0c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@489f5b24, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62ccf42c, org.springframework.security.web.session.SessionManagementFilter@3a95898c, org.springframework.security.web.access.ExceptionTranslationFilter@702f99a5, org.springframework.security.web.access.intercept.AuthorizationFilter@5111de33]
2024-08-02T17:06:48.097+07:00  INFO 20892 --- [ecommerce] [main] o.e.ecommerce.EcommerceApplicationTests  : Started EcommerceApplicationTests in 10.491 seconds (process running for 12.602)
2024-08-02T17:06:49.202+07:00  INFO 20892 --- [ecommerce] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:06:49.204+07:00  INFO 20892 --- [ecommerce] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T17:06:49.225+07:00  INFO 20892 --- [ecommerce] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
